
//##############################################################################
// GUI-Funktionen
//##############################################################################

//******************************************************************************
// (Erweiterte) Funktion zur Anzeige eines Dialogs für die Volltextsuche
//  => die notwendigen Parameter müssen übergeben werden
// @Result: je nach Workarea, Feldwert des Rückgabe-Feldes
//          => siehe im Programm 'Suchen\Volltextsuche'
//******************************************************************************
function _FTS_ShowSearchDlg_Manually(nWorkarea, cFTSField, cSelectField, cBrowserID, cPositionSaveId)
   Result := Call( 'Suchen\volltext-suche\gui',
                   nWorkarea, cFTSField, cSelectField, cBrowserID, cPositionSaveId ),
end,

//******************************************************************************
// (Einfache) Funktion zur Anzeige eines Dialogs für die Volltextsuche
//  => die Such-Felder, Rückgabe-Felder, Browser und Positions-ID werden
//     automatisch vergeben
// @Result: je nach Workarea, Feldwert des Rückgabe-Feldes etc.
//******************************************************************************
function _FTS_ShowSearchDlg_Auto(nWorkarea)
| bParamsDefined, cFTSField, cSelectField, cBrowserID, cPositionSaveId |

   bParamsDefined := false,
   cFTSField       := 'SUCHE',
   cSelectField    := 'ID',
   cPositionSaveId := '@FD' + StrZero(nWorkarea, 3),

   case nWorkarea
      of waDab000 :: // Kundenstamm
         bParamsDefined  := true,
         cBrowserID      := 'CUS_FIN',

      of waDab010 :: // Artikelstamm
         bParamsDefined  := true,
         cBrowserID      := 'ART_FIN',

      of waDab100 :: // Lieferantenstamm
         bParamsDefined  := true,
         cBrowserID      := 'SUP_FIN',

      of waDab062 :: // Vertreterstamm
         bParamsDefined  := true,
         cBrowserID      := 'AGT_FIN',

      of waDab005 :: // Kontakte
         // ACHTUNG:
         // - keine LESERECHTE-Auswertung für den jeweiligen Master-Satz
         // - Kontakt kann ggf. nicht über Infos des Master-Satzes gefunden werden
         bParamsDefined  := true,
         cBrowserID      := '@CON_FIN', // individueller Browser, da "Zuordnung"-Spalten notwendig

      of waDab262 :: // BDE Personalstamm
         bParamsDefined  := true,
         cSelectField    := 'PERSNR', // keine 'ID' vorhanden
         cBrowserID      := 'BDEPRS3',

      of waDab330 :: // BDE Ressourcenstamm
         bParamsDefined  := true,
         cBrowserID      := 'RES_ED4',

   otherwise
      MessageDlg('FTS_ShowSearchDlg(): ' + crlf +
                 'Für die Workarea ' + Str(nWorkarea) + ' sind keine Parameter-Vorgaben vorhanden. ' + crlf +
                 'Verwenden Sie FTS_ShowSearchDlg_Manually() um Parameter zu definieren.'),
   endcase,

   if bParamsDefined then
      Result := FTS_ShowSearchDlg_Manually(nWorkarea, cFTSField, cSelectField, cBrowserID, cPositionSaveId),
   else
      Result := -1,
   endif,
end,

//##############################################################################
// Berechnung Volltext-Such-Felder
//##############################################################################

//******************************************************************************
// Volltext-Suchtext für Artikelstamm (DAB010) berechnen
//   (für Update-Codeblock im Feld 'SUCHE')
// @Result: string
//******************************************************************************
function _FTS_CalcSearchTextForDab010(oDab010)

   // Einen Wert dem FTS-Such-String hinzufügen (Übergabe per Referenz!)
   function AddValueToSearchText(cSearchText:R, uValue)
      uValue := AllTrim(ToString(uValue)),
      if not empty(uValue) then
         cSearchText := ConcatTrenner(cSearchText, uValue, crlf),
      endif,
   end,

   Result := '',

   // Alle ggf. interessanten Infos des Artikel aufgenommen:
   AddValueToSearchText(Result, oDab010:ARTNR),
   AddValueToSearchText(Result, oDab010:BEZ1),
   AddValueToSearchText(Result, oDab010:BEZ2),
   AddValueToSearchText(Result, oDab010:MATCHCODE),
   AddValueToSearchText(Result, oDab010:MATCHCODE1),
   AddValueToSearchText(Result, oDab010:MATCHCODE2),
   AddValueToSearchText(Result, oDab010:MATCHCODE3),
   AddValueToSearchText(Result, oDab010:MATCHCODE4),
   AddValueToSearchText(Result, oDab010:MATCHCODE5),
   AddValueToSearchText(Result, oDab010:EAN),
   AddValueToSearchText(Result, oDab010:ZEICHN_NR),
   AddValueToSearchText(Result, oDab010:PFAD_BILD),
   AddValueToSearchText(Result, oDab010:ARTNR_E1),
   AddValueToSearchText(Result, oDab010:ARTNR_E2),
   AddValueToSearchText(Result, oDab010:ARTNR_E3),
   AddValueToSearchText(Result, oDab010:ME),
   AddValueToSearchText(Result, oDab010:ME_EK),
   AddValueToSearchText(Result, oDab010:ME_PE),
   AddValueToSearchText(Result, oDab010:ME_VE),
   AddValueToSearchText(Result, oDab010:ZOLLNR),
   AddValueToSearchText(Result, oDab010:PROD_ABT),
   AddValueToSearchText(Result, oDab010:PLATZ_STD),
   AddValueToSearchText(Result, RtfToText(oDab010:MEMO)),
   AddValueToSearchText(Result, RtfToText(oDab010:I_MEMO)),
   AddValueToSearchText(Result, oDab010:VERS_BEZ),
   AddValueToSearchText(Result, RtfToText(oDab010:VERS_INFO)),

   Result := PrepareTextForFTS(waDab010, 'SUCHE', Result, true, 'DAX010F1'), // Individual-Index!
end,

//******************************************************************************
// Volltext-Suchtext für das Belegarchiv (DAB700) berechnen
//   (für Update-Codeblock im Feld 'TEXT')
// @Result: string
//******************************************************************************
function _FTS_CalcSearchTextForDab700(oDab700)
  Result := D700_VoucherAsText('DATEN',   oDab700) + ' ' +
            Alltrim(RtfToText(oDab700:MEMO))              + ' ' +
            D700_HistoryAsText('HISTORY', oDab700),
  Result := PrepareTextForFTS(waDab700, 'TEXT', Result, true),
end,
