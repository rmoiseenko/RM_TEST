//##############################################################################
//##############################################################################
// Beschreibung: Über das Programm "Layout Übersetzungen" können diese
//               Labels erstellt/verwaltet werden.
//               Pro Label können n-Sprachen hinzugefügt werden.
//               Es können Label-Bezeichnungen oder Label-Texte(RTF-Text)
//               hinterlegt werden.
//##############################################################################
//##############################################################################

|
   m_oOwnerForm:P1, m_cFormRefKey:P2, m_cFormID, m_cWinPosSaveId,
   m_cBrowserMaster, m_cBrowserDetail, m_cContainsFilter,
   m_oDM, tbl_KDNLBK, tbl_KDNLBP,
   // @VDB@ der nachfolgende Teil wird automatisch gepflegt
   oForm, A_ActiveDesignMode, act_beInfo, act_CancelFSLabel,
   act_CancelLabelGerman, act_DateUser, act_DeleteFs, act_DeleteLabel,
   act_NewFs, act_NewLabel, act_SaveFSLabel, act_SaveLabelGerman, al_Main,
   BeBarDockControl1, BeBarDockControl2, BeBarDockControl3, bipnl_Fremdsprachen,
   bipnl_GermanLabel, bipnl_hinweis, bipnl_Top, bm_Main, bm_MainBar1,
   bm_MainBar2, bm_MainBar3, btn_beInfo, btn_CancelFSLabel,
   btn_CancelLabelGerman, btn_DateUser, btn_delete_fs, btn_DeleteLabel,
   btn_DesignMode, btn_NewFs, btn_NewLabel, btn_SaveFSLabel,
   btn_SaveLabelGerman, ds_KDNLBK, ds_KDNLBP, edt_bez, edt_bez_fs, edt_InfoText,
   edt_labelid, edt_Memo, edt_MemoFs, edt_Search, edt_sprache, grd_KDNLBK,
   grd_KDNLBP, lbl_Bez, lbl_Bez_Fs, lbl_InfoText, lbl_LabelID, lbl_Langtext,
   lbl_MemoFs, lbl_Sprache, pnl_Browser, pnl_EigeneSprache, pnl_Fremdsprachen,
   pnl_FremdsprachenEdits, pnl_FremdsprachenRight, pnl_Ground, pnl_InfoText,
   pnl_LabelDeutsch, pnl_LabelDeutschFelder, pnl_Left, pnl_Main, pnl_Memo,
   pnl_Right, pnl_titel
   // @VDE@ der vorangehende Teil wird automatisch gepflegt
|

//##############################################################################
//##############################################################################
// Konstanten
//##############################################################################
//##############################################################################

m_cFormID        := "@LUU",
m_cWinPosSaveId  := "@LUU",
m_cBrowserMaster := "@LUU_M",
m_cBrowserDetail := "@LUU_D",

//##############################################################################
//##############################################################################
// Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// Actions aktivieren/deaktivieren
//******************************************************************************
function ActionsEnabled()
| bEditLBK, bEditLBP |
   bEditLBK                         := DBState(tbl_KDNLBK) <> dsBrowse,
   bEditLBP                         := DBState(tbl_KDNLBP) <> dsBrowse,
   act_SaveLabelGerman.enabled      := bEditLBK,
   act_CancelLabelGerman.enabled    := bEditLBK,
   act_NewLabel.enabled             := not bEditLBK and not bEditLBP,
   act_DeleteLabel.enabled          := not bEditLBK and not bEditLBP and not NoDs(tbl_KDNLBK),
   act_NewFs.enabled                := not bEditLBK and not bEditLBP,
   act_DeleteFs.enabled             := not bEditLBK and not bEditLBP,
   act_SaveFSLabel.enabled          := bEditLBP,
   act_CancelFSLabel.enabled        := bEditLBP,
   pnl_Fremdsprachen.enabled        := not bEditLBK,
   pnl_Memo.enabled                 := not bEditLBP,
   pnl_Left.enabled                 := not bEditLBP and not bEditLBK,
   edt_labelid.enabled              := DBState(tbl_KDNLBK) = dsInsert,
   act_DateUser.enabled             := not NoDs(tbl_KDNLBK),
end,     

//******************************************************************************
// Umschalten des Label-Druckmodus
// @Result: null
//******************************************************************************
function ToggleDesignModus()
   gl_LUU_DesignModus := btn_DesignMode.Down,
   if gl_LUU_DesignModus then
      A_ActiveDesignMode.Caption := "Designmodus deaktivieren",
      bipnl_hinweis.Caption      := "Labeldruck ist aktiviert - alle Label-Formulare werden nur mit den Label-ID's gedruckt",
      bipnl_hinweis.Visible      := True,
      bipnl_hinweis.ColorMode    := ipcmWarning,
   else
      A_ActiveDesignMode.caption := "Designmodus aktivieren",
      bipnl_hinweis.visible      := False,
   endif,
end,

//******************************************************************************
// Öffnen aller benötigten Tabellen und mit der GUI verknüpfen
// @Result: null
//******************************************************************************
function OpenDataBaseAndLinkToGUI()
   m_oDM := CreateObject('TBeDBGet', 'FORLBLDM', oForm, oForm),

   tbl_KDNLBK := DBGetTable(m_oDM, waKDNLBK),
   tbl_KDNLBP := DBGetTable(m_oDM, waKDNLBP),

   tbl_KDNLBK.WriteProtocol   := True,
   tbl_KDNLBP.WriteProtocol   := True,
   tbl_KDNLBK.CheckUserRights := True,
   tbl_KDNLBP.CheckUserRights := True,

   AssignEvent(tbl_KDNLBP, 'AfterInsert', 'tbl_KDNLBPNewRecord'),

   ds_KDNLBK.DataSet         := tbl_KDNLBK,
   grd_KDNLBK.ID             := m_cBrowserMaster,
   grd_KDNLBK.ReadWriteProps := False,

   ds_KDNLBP.DataSet         := tbl_KDNLBP,
   grd_KDNLBP.ID             := m_cBrowserDetail,
   grd_KDNLBP.ReadWriteProps := False,
end,

//##############################################################################
//##############################################################################
// Actionhandler
//##############################################################################
//##############################################################################

//******************************************************************************
// Action: Datensatz speichern auf Labelebene
//******************************************************************************
function act_SaveLabelGermanExecute( Sender )
   if LookUp(waKDNLBK, 'LABEL', {{UPPER(tbl_KDNLBK:LABEL)}}, 'not EOF()') and DBSTATE(tbl_KDNLBK) = dsInsert then
      MyFocusControl(oForm, edt_labelid),
      MessageDlg('Für dieses Label existiert bereits einen Datensatz.', mtError),
   else
      if LUU_ExtractLabelIdentifier(UPPER(tbl_KDNLBK:LABEL)) <> UPPER(tbl_KDNLBK:LABEL) then
         MessageDlg('Die LabelID entspricht nicht dem korrekten Format! Ein Abgrenzung aus einem Unterstrich und einer Nummernkette ist nicht möglich.', mtWarning),
      else
         MyPost(tbl_KDNLBK),
      endif,
   endif,
end,

//******************************************************************************
// Action: Abbrechen auf Labelebene
//******************************************************************************
function act_CancelLabelGermanExecute( Sender )
   if JN("Änderungen verwerfen?") then
      DBCancel(tbl_KDNLBK),
   endif,
end,

//******************************************************************************
// Action: Datensatz neu auf Labelebene
//******************************************************************************
function act_NewLabelExecute( Sender )
   edt_labelid.enabled := True,
   oForm.ActiveControl := edt_labelid,
   MyAppend(tbl_KDNLBK),
end,

//******************************************************************************
// Action: Datensatz löschen auf Labelebene
//******************************************************************************
function act_DeleteLabelExecute( Sender )
| bDelete |
   if JN("Label " + RTrim(tbl_KDNLBK:LABEL) + " inkl. aller Fremdsprachenlabels löschen") then
      DBScope({tbl_KDNLBK:LABEL}, {tbl_KDNLBK:LABEL}, tbl_KDNLBP),
      DBGoTop(tbl_KDNLBP),
      bDelete := True,
      while not eof(tbl_KDNLBP) do
         if not DBDelete(tbl_KDNLBP) then
            bDelete := False,
            DBSkip(1, tbl_KDNLBP),
         endif,
      end,
      if bDelete then
         MyDelete(tbl_KDNLBK),
      else,
         MessageDlg("Fehler beim Löschen", 0, 4),
      endif,
   endif,
end,

//******************************************************************************
// Action: globale Variable umstellen
//         Hintergrund: wenn aktiv werden auf den Belege nicht die Inhalte
//         sondern die LabelID's gedruckt, damit man danach die Übersetzungen
//         machen kann
//******************************************************************************
function A_ActiveDesignModeExecute( Sender )
   ToggleDesignModus(),
end,

//******************************************************************************
// Action: Individuelle Online-Hilfe aufrufen
//******************************************************************************
function act_beInfoExecute( Sender )
   // Tipp: Der Filter für die Memo-Tabelle ist über die globale Variable
   //       veränderbar, falls im Datenbestand z.B. eine andere
   //       Memo-ID vorliegt oder mehrere Hilfe-Themen angezeigt werden sollen.
   IOHU_ShowOnlineHelpGui(gl_LUU_IndiOnlineHelp_SQLWhere),
end,

//******************************************************************************
// Action: Datensatz neu auf Detailebene
//******************************************************************************
function act_NewFsExecute( Sender )
   MyAppend(tbl_KDNLBP),
   MyFocusControl(oForm, edt_sprache),
end,

//******************************************************************************
// Action: Datensatz löschen auf Detailebene
//******************************************************************************
function act_DeleteFsExecute( Sender )
   if JN("FS Label "+RTrim(tbl_KDNLBP:LABEL)+" für Sprache "+str(tbl_KDNLBP:sprache)+" löschen?") then
      MyDelete(tbl_KDNLBP),
   endif,
end,

//******************************************************************************
// Action: Datensatz speichern auf Detailebene
//******************************************************************************
function act_SaveFSLabelExecute( Sender )
   if LookUp(waKDNLBP, 'LABEL', {{UPPER(tbl_KDNLBP:LABEL), tbl_KDNLBP:SPRACHE}}, 'not EOF()') and DBSTATE(tbl_KDNLBP) = dsInsert then
      MyFocusControl(oForm, edt_sprache),
      MessageDlg('Für diese Sprache gibt es bereits einen Datensatz.', mtError),
   else
      MyPost(tbl_KDNLBP),
   endif,
end,

//******************************************************************************
// Action: Editmodus abbrechen auf Detailebene
//******************************************************************************
function act_CancelFSLabelExecute( Sender )
   if JN("Änderungen verwerfen?") then
      DBCancel(tbl_KDNLBP),
   endif,
end,

//******************************************************************************
// Action: Datum/User einfügen
//******************************************************************************
function act_DateUserExecute( Sender )   
   GWU_InsertDatumUserIntoRTF('INFOTEXT', tbl_KDNLBK, edt_InfoText),
end,

//##############################################################################
//##############################################################################
// Eventhandler
//##############################################################################
//##############################################################################

//******************************************************************************
// Event: Maske Schließen
//******************************************************************************
function FormExClose( Sender, oAction )
   gl_LUU_DesignModus := false, // Zur Sicherheit beim Schließen des Formulars
                                // den DesignModus deaktiveren, denn sonst druckt
                                // man womöglich aus Versehen im DesignModus weiter.
   oAction := caFree,
end,

//******************************************************************************
// Event: Form Zerstören
//******************************************************************************
function FormExCloseQuery( Sender, bCanClose )
   bCanClose := True,

   // Wenn sich eine der Tabellen noch in Bearbeitung befindet, nachfragen ob
   // die Änderungen verworfen werden sollen
   if EditModes(tbl_KDNLBK) or EditModes(tbl_KDNLBP) then
      bCanClose := JN('Das Fenster befindet sich noch in Bearbeitung. ' + crlf +
                      'Änderungen verwerfen und Fenster schließen?'),
      if bCanClose then
         DBCancel(tbl_KDNLBK),
         DBCancel(tbl_KDNLBP),
      endif,
   endif,
end,

//******************************************************************************
// Event: Label aus KDNLBK übernehmen
//******************************************************************************
function tbl_KDNLBPNewRecord( Sender )
   tbl_KDNLBP:LABEL := tbl_KDNLBK:LABEL,
end,

//******************************************************************************
// Event: Beim Zerstören des Formulars
//******************************************************************************
function FormExDestroy( Sender )
   GFU_MDIChild_Destroyed(oForm, m_cFormRefKey),                                // MDI-Child aus Form-Ref-Array austragen
end,

//******************************************************************************
// Event: Beim Auslösen der Suche/Filterung
//******************************************************************************
function edt_SearchSearchExecute( Sender )
| cInputText |
   cInputText := edt_Search.Text,
   if Empty(cInputText) then
      m_cContainsFilter := '',
   else
      m_cContainsFilter := PrepareTextForFTSSearch(waKDNLBK,
                                                   'SUCHE',
                                                   cInputText,
                                                   '',
                                                   False,
                                                   True,
                                                   'AND',
                                                   True),
   endif,

   tbl_KDNLBK.Filter   := m_cContainsFilter,
   tbl_KDNLBK.Filtered := not Empty(m_cContainsFilter),
   DBRefresh(tbl_KDNLBK),
end,

//******************************************************************************
// Event: Datenänderung auf Labelebene
//******************************************************************************
function ds_KDNLBKDataChange( Sender )
   DBScope({tbl_KDNLBK:label}, {tbl_KDNLBK:label}, tbl_KDNLBP),
   DBGoTop(tbl_KDNLBP),
   btn_delete_fs.Enabled := not NoDs(tbl_KDNLBP),
end,

//******************************************************************************
// Event: Statusänderung auf Detailebene
//******************************************************************************
function ds_KDNLBPStateChange( Sender )
   ActionsEnabled(),
end,

//******************************************************************************
// Event: Statusänderung auf Labelebene
//******************************************************************************
function ds_KDNLBKStateChange( Sender )
   ActionsEnabled(),
end,

//##############################################################################
//##############################################################################
// Oberflächen-Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// Formular auf Standard setzen
// @Result: null
//******************************************************************************
function SetDefaults()
   m_cContainsFilter      := '',
   oForm.Activecontrol    := edt_search,

   edt_Memo.Font.Name     := 'Arial',
   edt_Memo.Font.Size     := 8,
   edt_InfoText.Font.Name := 'Arial',
   edt_InfoText.Font.Size := 8,
   edt_MemoFs.Font.Name   := 'Arial',
   edt_MemoFs.Font.Size   := 8,
end,

//******************************************************************************
// InitForm lädt das Formular in Abhängigkeit des Owners
// @Result: null
//******************************************************************************
function InitForm()
   if Empty(m_oOwnerForm) then
      oForm             := LoadForm(m_cFormID, Application),
      oForm.FormStyle   := fsNormal,
   else
      oForm             := LoadForm(m_cFormID, m_oOwnerForm),
      oForm.FormStyle   := fsMdiChild,
      oForm.Windowstate := wsMaximized,
   endif,

   oForm.PositionSaveID := m_cWinPosSaveId,
   oForm.OrigCapt       := 'Layout Übersetzungen',
   oForm.ImageIndex     := 81,                                                  // Image-Index für den Window-Navigator setzen
end,

//******************************************************************************
// ShowGUI zeigt das GUI an, das vorher mit LoadGUI geladen werden muss.
// @Result: null
//******************************************************************************
function ShowGUI()
   if Empty(m_oOwnerForm) then
      ShowModal(oForm),
   else
      Show(oForm),
   endif,
end,

//******************************************************************************
// LoadGUI lädt sämtliche Komponenten die für die Oberfläche benötigt werden.
// @Result: null
//******************************************************************************
function LoadGUI()
   // @VZB@ der nachfolgende Teil wird automatisch gepflegt
   A_ActiveDesignMode     := FindObject(oForm, "A_ActiveDesignMode"),
   act_beInfo             := FindObject(oForm, "act_beInfo"),
   act_CancelFSLabel      := FindObject(oForm, "act_CancelFSLabel"),
   act_CancelLabelGerman  := FindObject(oForm, "act_CancelLabelGerman"),
   act_DateUser           := FindObject(oForm, "act_DateUser"),
   act_DeleteFs           := FindObject(oForm, "act_DeleteFs"),
   act_DeleteLabel        := FindObject(oForm, "act_DeleteLabel"),
   act_NewFs              := FindObject(oForm, "act_NewFs"),
   act_NewLabel           := FindObject(oForm, "act_NewLabel"),
   act_SaveFSLabel        := FindObject(oForm, "act_SaveFSLabel"),
   act_SaveLabelGerman    := FindObject(oForm, "act_SaveLabelGerman"),
   al_Main                := FindObject(oForm, "al_Main"),
   BeBarDockControl1      := FindObject(oForm, "BeBarDockControl1"),
   BeBarDockControl2      := FindObject(oForm, "BeBarDockControl2"),
   BeBarDockControl3      := FindObject(oForm, "BeBarDockControl3"),
   bipnl_Fremdsprachen    := FindObject(oForm, "bipnl_Fremdsprachen"),
   bipnl_GermanLabel      := FindObject(oForm, "bipnl_GermanLabel"),
   bipnl_hinweis          := FindObject(oForm, "bipnl_hinweis"),
   bipnl_Top              := FindObject(oForm, "bipnl_Top"),
   bm_Main                := FindObject(oForm, "bm_Main"),
   bm_MainBar1            := FindObject(oForm, "bm_MainBar1"),
   bm_MainBar2            := FindObject(oForm, "bm_MainBar2"),
   bm_MainBar3            := FindObject(oForm, "bm_MainBar3"),
   btn_beInfo             := FindObject(oForm, "btn_beInfo"),
   btn_CancelFSLabel      := FindObject(oForm, "btn_CancelFSLabel"),
   btn_CancelLabelGerman  := FindObject(oForm, "btn_CancelLabelGerman"),
   btn_DateUser           := FindObject(oForm, "btn_DateUser"),
   btn_delete_fs          := FindObject(oForm, "btn_delete_fs"),
   btn_DeleteLabel        := FindObject(oForm, "btn_DeleteLabel"),
   btn_DesignMode         := FindObject(oForm, "btn_DesignMode"),
   btn_NewFs              := FindObject(oForm, "btn_NewFs"),
   btn_NewLabel           := FindObject(oForm, "btn_NewLabel"),
   btn_SaveFSLabel        := FindObject(oForm, "btn_SaveFSLabel"),
   btn_SaveLabelGerman    := FindObject(oForm, "btn_SaveLabelGerman"),
   ds_KDNLBK              := FindObject(oForm, "ds_KDNLBK"),
   ds_KDNLBP              := FindObject(oForm, "ds_KDNLBP"),
   edt_bez                := FindObject(oForm, "edt_bez"),
   edt_bez_fs             := FindObject(oForm, "edt_bez_fs"),
   edt_InfoText           := FindObject(oForm, "edt_InfoText"),
   edt_labelid            := FindObject(oForm, "edt_labelid"),
   edt_Memo               := FindObject(oForm, "edt_Memo"),
   edt_MemoFs             := FindObject(oForm, "edt_MemoFs"),
   edt_Search             := FindObject(oForm, "edt_Search"),
   edt_sprache            := FindObject(oForm, "edt_sprache"),
   grd_KDNLBK             := FindObject(oForm, "grd_KDNLBK"),
   grd_KDNLBP             := FindObject(oForm, "grd_KDNLBP"),
   lbl_Bez                := FindObject(oForm, "lbl_Bez"),
   lbl_Bez_Fs             := FindObject(oForm, "lbl_Bez_Fs"),
   lbl_InfoText           := FindObject(oForm, "lbl_InfoText"),
   lbl_LabelID            := FindObject(oForm, "lbl_LabelID"),
   lbl_Langtext           := FindObject(oForm, "lbl_Langtext"),
   lbl_MemoFs             := FindObject(oForm, "lbl_MemoFs"),
   lbl_Sprache            := FindObject(oForm, "lbl_Sprache"),
   pnl_Browser            := FindObject(oForm, "pnl_Browser"),
   pnl_EigeneSprache      := FindObject(oForm, "pnl_EigeneSprache"),
   pnl_Fremdsprachen      := FindObject(oForm, "pnl_Fremdsprachen"),
   pnl_FremdsprachenEdits := FindObject(oForm, "pnl_FremdsprachenEdits"),
   pnl_FremdsprachenRight := FindObject(oForm, "pnl_FremdsprachenRight"),
   pnl_Ground             := FindObject(oForm, "pnl_Ground"),
   pnl_InfoText           := FindObject(oForm, "pnl_InfoText"),
   pnl_LabelDeutsch       := FindObject(oForm, "pnl_LabelDeutsch"),
   pnl_LabelDeutschFelder := FindObject(oForm, "pnl_LabelDeutschFelder"),
   pnl_Left               := FindObject(oForm, "pnl_Left"),
   pnl_Main               := FindObject(oForm, "pnl_Main"),
   pnl_Memo               := FindObject(oForm, "pnl_Memo"),
   pnl_Right              := FindObject(oForm, "pnl_Right"),
   pnl_titel              := FindObject(oForm, "pnl_titel"),
   // @VZE@ der vorangehende Teil wird automatisch gepflegt
   
   edt_sprache.BeAttributeID := 2001,
end,

//##############################################################################
//##############################################################################
// Hauptprogramm
//##############################################################################
//##############################################################################

startseq
   InitForm(),
   LoadGUI(),
   SetDefaults(),
   OpenDataBaseAndLinkToGUI(),
   ToggleDesignModus(),
   ShowGUI(),
onerror
   DestroyObject(oForm),
   MessageDlg('Fehler im Programm ' + ProgName() + crlf +
              GetErrorText() + crlf + crlf +
              DebugArr(GetErrorStack(True)), mtError),
stopseq,

oForm
