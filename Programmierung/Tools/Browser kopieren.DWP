//##############################################################################
//##############################################################################
// Beschreibung: Mit Hilfe dieses Programms lassen sich Browser von einem
//               User auf andere User kopieren.
// @Result: null
//##############################################################################
//##############################################################################

|
   // Programmvariablen
   cBrowser, cQuellUser, cUsers,
   // Tabellen
   oDABBROOrg:DB := '532, BROWSER_ID',
   oDABBRO:DB    := '532, BROWSER_ID',
   oDABSPROrg:DB := '500, DABSPR',
   oDABSPR:DB    := '500, DABSPR',
   oUserTable,

   // Oberflächenvariablen
   oForm,
   pnl_Headline,
   lbl_Browser,  edt_Browser,
   chk_Standard,
   lbl_VonUser,  cmb_VonUser,
   lbl_ZuUser,   cmb_ZuUser,
   chk_CheckSpr,
   btn_ok,       btn_Abbrechen
|

//##############################################################################
//##############################################################################
// Funktionen
//##############################################################################
//##############################################################################

function CreateUserTable()
| oMem, oField, oSQL, oDABFIL |
   oMem := CreateObject('TMemCalcTable'),

   AddMemField(oMem, 'USER_NO',   'C',  3, 0),
   AddMemField(oMem, 'USER_NAME', 'C', 30, 0),
   oMem.Active := True,

   oDABFIL := BeOpen(101, 'DABFIL'),
   startseq
      DBScope({999, '__USR__001'}, {999, '__USR__999'}, oDABFIL),
      DBGoTop(oDABFIL),
      while not Eof(oDABFIL) do
         DBAppend(oMem),
         oMem:USER_NO   := StrZero( Val(SubStr(oDABFIL:FELD, 8, 3)), 3),
         oMem:USER_NAME := oDABFIL:NAME,
         DBPost(oMem),
         DBSkip(1, oDABFIL),
      end,
      oMem.OrderBy := 'USER_NAME',
   always
      BeClose(oDABFIL),
   stopseq,
   result := oMem,
end,

//******************************************************************************
// ChangeDABBRO setzt den neuen Browser für den übergebenen User.
// @Result: null
//******************************************************************************
function ChangeDABBRO(nUsr)
   SuspendEx(oDABBRO, True),
   DBStartTrans(),
   startseq
      if not DBSeek({cBrowser, Val(cQuellUser)}, oDABBROOrg) then
         SetError('Browserdaten konnten nicht in Quelltabelle ermittelt werden.'),
      endif,
      writeln("Ersetze Browser von "+str(nUsr)),
      if not DBSeek({cBrowser, nUsr}, oDABBRO) then
         DBAppend(oDABBRO),
         oDABBRO.RecAsArray := oDABBROOrg.RecAsArray,
         oDABBRO:USER       := nUsr,
      else,
         DBEdit(oDABBRO),
      endif,
      oDABBRO:DATA     := oDABBROOrg:DATA,
      oDABBRO:DATA_OLD := oDABBROOrg:DATA_OLD,
      DBPost(oDABBRO),
      DBCommit(),
   onerror
      DbRollback(),
      MessageDlg("Fehler beim Ändern des Browsers für User: " + nUsr + crlf + GetErrorText()),
   stopseq,
   SuspendEx(oDABBRO, False),
end,

//******************************************************************************
// ChangeDABSPR übernimmt die Sprachdaten für den übergebenen User.
// @Result: null
//******************************************************************************
Function ChangeDABSPR(cUsr)
| cKey, i |
   SuspendEx(oDABSPR, True),
   for i := 1 to 10 do
      DBScope({"Grid" + PadR(cBrowser, 10) + cUsr + "." + StrZero(i, 3)},
              {"Grid" + PadR(cBrowser, 10) + cUsr + "." + StrZero(i, 3)},
              oDABSPROrg),

      DBGoTop(oDABSPROrg),
      while !EoF(oDABSPROrg) do
         cKey := "Grid" + PadR(cBrowser, 10) + cUsr + "." + StrZero(i, 3),
         DbStartTrans(),
         startseq
            if !DBSeek({cKey}, oDABSPR) then
               DBAppend(oDABSPR),
               oDABSPR:KEY  := cKey,
            else,
               DBEdit(oDABSPR),
            endif,

            oDABSPR:DATA := oDABSPROrg:DATA,
            DBPost(oDABSPR),
            DBCommit(),
         onerror
            DbRollback(),
            MessageDlg("Fehler beim Kopieren der Sprachdaten für User: " +
                       cUsr + crlf + GetErrorText()),
         stopseq,
         DBSkip(1, oDABSPROrg),
      end,
   next,
   SuspendEx(oDABSPR, False),
end,

//******************************************************************************
// Kopiert den Browser für alle User wenn "Alle" gewählt wurde.
// @Result: null
//******************************************************************************
function CopyForAll()
| oRec |
   startseq
      ProgressbarShow(, "Browser kopieren", False),
      oUserTable := CreateUserTable(),
      foreach oRec in oUserTable do
         if not oRec:USER_NO == cQuellUser then // exakter Vergleich notwendig!
            ProgressbarUpdate(, 'Kopiere Browser für User: ' + oRec:USER_NO, True),
            ChangeDABBRO(oRec:USER_NO),
            if chk_CheckSpr.Checked then
               ChangeDABSPR(oRec:USER_NO),
            endif,
         endif,
      next,
   always
      ProgressbarHide(),
   stopseq,
   MessageDlg("Browser für alle User kopiert"),
end,

//******************************************************************************
// Kopiert den Browser für alle ausgewählten User wenn nicht alle gewählt wurde.
// @Result: null
//******************************************************************************
function CopyForChecked()
| i, cActualUsr |
   Startseq,
      ProgressbarShow(, "Browser kopieren", False),
      for i := 2 to TokenCount(cUsers, '/') - 1 do
         cActualUsr := StrToken(cUsers, '/', i),
         if not cActualUsr = cQuellUser then
            ProgressbarUpdate(, 'Kopiere Browser für User: ' + cActualUsr, True),
            ChangeDABBRO(cActualUsr),
            if chk_CheckSpr.Checked then
               ChangeDABSPR(cActualUsr),
            endif,
         endif,
      next,
   always
      progressbarhide(),
   stopseq,
   MessageDlg("Browser für die User:" + crlf + cUsers + crlf +  "kopiert"),
end,

//******************************************************************************
// ValidateInput überprüft alle Eingaben.
// @Result: boolean - True = Eingaben sind valide.
//******************************************************************************
function ValidateInput()
  | cBrowser |
   result := True,
   cBrowser := StrTran(edt_Browser.Text, ".BEB", ""),
   // Prüfen ob Browser eingetragen wurde.
   if Empty(cBrowser) then
      result := False,
      MessageDlg("Bitte ID des zu kopierenden Browsers eintragen."),
      exit,
   endif,
   // Prüfen ob VonUser eingetragen wurde.
   if cmb_VonUser.Enabled and empty(cmb_VonUser.Value) then
      result := False,
      MessageDlg("Bitte User eintragen von dem der Browser kopiert werden soll."),
      exit,
   endif,
   // Prüfen ob der VonUser über den Browser verfügt.
   if !DBSeek({cBrowser, iif(cmb_VonUser.Enabled, cmb_VonUser.Value, 0)},
              oDABBROOrg) then
       result := False,
       MessageDlg("Gewählter Browser bei diesem User nicht verfügbar."),
       exit,
   endif,
   // Prüfen ob ZuUser eingetragen wurden.
   if Empty(cmb_ZuUser.Value) then
      result := False,
      MessageDlg("Bitte User eintragen für die der Browser kopiert werden soll."),
      exit,
   endif,

   result
end,

//******************************************************************************
// CopyBrowser kopiert nach überprüfung den angegebenen Browser vom angegebenen
// User auf alle ausgewählten User.
// @Result: null
//******************************************************************************
function CopyBrowser()
   if !ValidateInput() then
      exit,
   endif,

   cBrowser := StrTran(edt_Browser.Text, ".BEB", ""),
   cUsers   := cmb_ZuUser.Value,

   if chk_Standard.Checked then
      cQuellUser := '0',
   else
      cQuellUser := cmb_VonUser.Value,
   endif,

   if '000' $ cUsers then
      CopyForAll(),
   else
      CopyForChecked(),
   endif,
end,

//******************************************************************************
// Enablen und Disablen der Von User Auswahl.
// @Result: null
//******************************************************************************
function DoOnStandardClick()
   if chk_Standard.Checked then
      lbl_VonUser.Enabled := False,
      cmb_VonUser.Enabled := False,
      cmb_zuUser.Value    := "/000/",
   else
      lbl_VonUser.Enabled := True,
      cmb_VonUser.Enabled := True,
   endif,
end,

//******************************************************************************
// AssignEvents fügt den Controls auf der Maske die Events hinzu.
// @Result: null
//******************************************************************************
function AssignEvents()
   AssignEvent(oForm,         'OnResize', 'DoOnFormResize'    ),
   AssignEvent(btn_ok,        'OnClick',  'DoOnOkClick'       ),
   AssignEvent(btn_Abbrechen, 'OnClick',  'DoOnAbbrechenClick'),
   AssignEvent(chk_Standard,  'OnClick',  'DoOnStandardClick' ),
end,

//##############################################################################
//##############################################################################
// Eventhandler
//##############################################################################
//##############################################################################

//******************************************************************************
// Beim verändern der Fenstergröße werden die Controlls neu ausgerichtet.
// @Result: null
//******************************************************************************
function DoOnFormResize()
   edt_Browser.Width := oForm.Width - edt_Browser.Left - 19,
   cmb_VonUser.Width := oForm.Width - edt_Browser.Left - 19,
   cmb_ZuUser.Width  := oForm.Width - edt_Browser.Left - 19,

   btn_ok.Left        := oForm.Width / 2 - 110,
   btn_Abbrechen.Left := oForm.Width / 2 - 5,
end,

//******************************************************************************
// Beim klicken auf Abbrechen wird das Fenster geschlossen.
// @Result: null
//******************************************************************************
function DoOnAbbrechenClick()
   CloseForm(oForm),
end,
//******************************************************************************
// Beim klicken auf OK wird der Browser kopiert.
// @Result: null
//******************************************************************************
function DoOnOkClick()
   CopyBrowser(),
end,

//##############################################################################
//##############################################################################
// Oberflächen-Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// LoadGUI lädt sämtliche Komponenten die für die Oberfläche benötigt werden.
// @Result: null
//******************************************************************************
function LoadGUI()
   startseq
      // --- Formular ----------------------------------------------------------
      oForm            := CreateObject('TFormEx', ),
      oForm.OrigCapt   := 'Browser kopieren',
      oForm.Caption    := 'Browser kopieren',
      oForm.Width      := 290,
      oForm.Height     := 200,
      oForm.Font.Name  := 'Segue ui',
      oForm.Font.Size  := 8,
      oForm.Font.Style := fsBold,
      oForm.KeyPreview := True,
      oForm.Constraints.MaxHeight := 245,
      oForm.Constraints.MinHeight := 245,
      oForm.Constraints.MinWidth  := 500,
      oForm.PositionSaveId        := '@CPYBR',

      // --- Infopanel ---------------------------------------------------------
      pnl_Headline         := CreateObject('TBeInfoPanel', , oForm, oForm),
      pnl_Headline.Align   := alTop,
      pnl_Headline.Visible := True,
      pnl_Headline.Caption := 'Browser kopieren',

      // --- Browserauswahl ----------------------------------------------------
      // Label
      lbl_Browser            := CreateObject('TLabel', , oForm, oForm),
      lbl_Browser.Caption    := 'Zu kopierender Browser',
      lbl_Browser.Top        := 35,
      lbl_Browser.Left       :=  5,
      // Edit
      edt_Browser            := CreateObject('TBeEdit', , oForm, oForm),
      edt_Browser.Top        :=  32,
      edt_Browser.Left       := 150,
      edt_Browser.Font.Color := clMaroon,
      edt_Browser.MaxLength  := 10,
      edt_Browser.IsLoaded   := True,

      // --- Standardbrowser ---------------------------------------------------
      chk_Standard := CreateObject('TCheckBox', , oForm, oForm),
      chk_Standard.Caption := "Standardbrowser kopieren",
      chk_Standard.Width   := 170,
      chk_Standard.Top     := 60,
      chk_Standard.Left    := 150,
      chk_Standard.Enabled := True,

      // --- Von User ----------------------------------------------------------
      // Label
      lbl_VonUser               := CreateObject('TLabel', , oForm, oForm),
      lbl_VonUser.Caption       := 'Kopieren von User',
      lbl_VonUser.Top           := 85,
      lbl_VonUser.Left          :=  5,
      // UserCombo
      cmb_VonUser               := CreateObject('TBeAttribCombo', , oForm, oForm),
      cmb_VonUser.Top           :=  85,
      cmb_VonUser.Left          := 150,
      cmb_VonUser.BEAttributeId := -11,
      cmb_VonUser.Value         := c_usr, // Vorbelegen mit aktuellem User.

      // --- Kopieren zu User --------------------------------------------------
      // Label
      lbl_ZuUser               := CreateObject('TLabel', , oForm, oForm),
      lbl_ZuUser.Caption       := 'zu User',
      lbl_ZuUser.Top           := 120,
      lbl_ZuUser.Left          :=  5,
      // UserCombo
      cmb_ZuUser               := CreateObject('TBeAttribCheckCombo', , oForm, oForm),
      cmb_ZuUser.Top           :=  118,
      cmb_ZuUser.Left          := 150,
      cmb_ZuUser.BEAttributeId := -13,

      // --- Sprache kopieren -------------------------------------------------
      chk_CheckSpr         := CreateObject('TCheckBox', , oForm, oForm),
      chk_CheckSpr.Caption := "Übersetzungen auch kopieren",
      chk_CheckSpr.Width   := 250,
      chk_CheckSpr.Top     := 145,
      chk_CheckSpr.Left    := 150,
      chk_CheckSpr.Enabled := True,

      // --- Buttons -----------------------------------------------------------
      // OK-Button
      btn_ok       := CreateObject('TBeBitBtn', 'OK', oForm, oForm),
      btn_ok.Width := 100,
      btn_ok.Top   := 175,
      btn_ok.Left  := 45,
      btn_ok.ImageIndex.IndexNormal := 7,
      // Abbrechen-Button
      btn_Abbrechen       := CreateObject('TBeBitBtn', 'Abbrechen', oForm, oForm),
      btn_Abbrechen.Width := 100,
      btn_Abbrechen.Top   := 175,
      btn_Abbrechen.Left  := 150,
      btn_Abbrechen.ImageIndex.IndexNormal := 8,

     if IsLicense(liMultiLanguage) then
       chk_checkspr.checked := true,
       chk_checkspr.visible := true,
     else,
       chk_checkspr.checked := false,
       chk_checkspr.visible := false,
     endif,

   onerror
      DestroyObject(oForm),
      SetError('Error loading gui' + crlf + GetErrorText()),
   stopseq,
end,

//##############################################################################
//##############################################################################
// Hauptprogramm
//##############################################################################
//##############################################################################

startseq,
   LoadGui(),
   AssignEvents(),
   ShowModal(oForm),
onerror,
   MessageDlg('Fehler im Programm ' + ProgName() + crlf + GetErrorText(), mtError),
stopseq,

