SELECT
     INNER_RESULT.*

   FROM
      (
         SELECT

            iif( MONTH(DAB340.S_DATUM) = 12 AND ISOWEEK(DAB340.S_DATUM) < 3,      // Leider gibt es keine Funktion "IsoWeekYear()", die das passende Jahr für "IsoWeek()" ermittelt... daher hier selbst berechnet!
                 Year(DAB340.S_DATUM) + 1,
                 iif( Month(DAB340.S_DATUM) = 1 AND IsoWeek(DAB340.S_DATUM) > 50,
                      Year(DAB340.S_DATUM) - 1,
                      Year(DAB340.S_DATUM) ) ) AS CALC_JAHR,
            ISOWEEK(DAB340.S_DATUM)            AS CALC_KW,

            PGKBDP_RUEST.ID                    AS PGKBDP_RUEST_ID,
            PGKBDP_STUECK.ID                   AS PGKBDP_STUECK_ID,

            IfNull(PGKBDP_RUEST.ARBG_DELTA,    PGKBDP_STUECK.ARBG_DELTA)    AS PGKBDP_ARBG_DELTA,
            IfNull(PGKBDP_RUEST.ARBG_DFAKT,    PGKBDP_STUECK.ARBG_DFAKT)    AS PGKBDP_ARBG_DFAKT,
            IfNull(PGKBDP_RUEST.ARBG_DQUEL,    PGKBDP_STUECK.ARBG_DQUEL)    AS PGKBDP_ARBG_DQUEL,
            IfNull(PGKBDP_RUEST.ARBG_ID,       PGKBDP_STUECK.ARBG_ID)       AS PGKBDP_ARBG_ID,
            IfNull(PGKBDP_RUEST.ARB_BEREIT,    PGKBDP_STUECK.ARB_BEREIT)    AS PGKBDP_ARB_BEREIT,
            IfNull(PGKBDP_RUEST.ARB_STATUS,    PGKBDP_STUECK.ARB_STATUS)    AS PGKBDP_ARB_STATUS,
            IfNull(PGKBDP_RUEST.ARTNR,         PGKBDP_STUECK.ARTNR)         AS PGKBDP_ARTNR,
            IfNull(PGKBDP_RUEST.ARTTYP,        PGKBDP_STUECK.ARTTYP)        AS PGKBDP_ARTTYP,
            IfNull(PGKBDP_RUEST.AUF_ID,        PGKBDP_STUECK.AUF_ID)        AS PGKBDP_AUF_ID,
            IfNull(PGKBDP_RUEST.AUF_ID_240,    PGKBDP_STUECK.AUF_ID_240)    AS PGKBDP_AUF_ID_240,
            IfNull(PGKBDP_RUEST.AUF_STATUS,    PGKBDP_STUECK.AUF_STATUS)    AS PGKBDP_AUF_STATUS,
            IfNull(PGKBDP_RUEST.AUF_WA,        PGKBDP_STUECK.AUF_WA)        AS PGKBDP_AUF_WA,
            IfNull(PGKBDP_RUEST.D240R_ID,      PGKBDP_STUECK.D240R_ID)      AS PGKBDP_D240R_ID,
            IfNull(PGKBDP_RUEST.D240S_ID,      PGKBDP_STUECK.D240S_ID)      AS PGKBDP_D240S_ID,
            IfNull(PGKBDP_RUEST.D270_RESID,    PGKBDP_STUECK.D270_RESID)    AS PGKBDP_D270_RESID,
            IfNull(PGKBDP_RUEST.DAB210_ID,     PGKBDP_STUECK.DAB210_ID)     AS PGKBDP_DAB210_ID,
            IfNull(PGKBDP_RUEST.EIND_SCHL,     PGKBDP_STUECK.EIND_SCHL)     AS PGKBDP_EIND_SCHL,
            IfNull(PGKBDP_RUEST.ENDE_FR,       PGKBDP_STUECK.ENDE_FR)       AS PGKBDP_ENDE_FR,
            IfNull(PGKBDP_RUEST.ENDE_FR_R,     PGKBDP_STUECK.ENDE_FR_R)     AS PGKBDP_ENDE_FR_R,
            IfNull(PGKBDP_RUEST.ENDE_FR_S,     PGKBDP_STUECK.ENDE_FR_S)     AS PGKBDP_ENDE_FR_S,
            IfNull(PGKBDP_RUEST.ENDE_IST_R,    PGKBDP_STUECK.ENDE_IST_R)    AS PGKBDP_ENDE_IST_R,
            IfNull(PGKBDP_RUEST.ENDE_IST_S,    PGKBDP_STUECK.ENDE_IST_S)    AS PGKBDP_ENDE_IST_S,
            IfNull(PGKBDP_RUEST.ENDE_SP,       PGKBDP_STUECK.ENDE_SP)       AS PGKBDP_ENDE_SP,
            IfNull(PGKBDP_RUEST.ENDE_SP_R,     PGKBDP_STUECK.ENDE_SP_R)     AS PGKBDP_ENDE_SP_R,
            IfNull(PGKBDP_RUEST.ENDE_SP_S,     PGKBDP_STUECK.ENDE_SP_S)     AS PGKBDP_ENDE_SP_S,
            IfNull(PGKBDP_RUEST.ERSTELLT,      PGKBDP_STUECK.ERSTELLT)      AS PGKBDP_ERSTELLT,
            IfNull(PGKBDP_RUEST.GEAENDERT,     PGKBDP_STUECK.GEAENDERT)     AS PGKBDP_GEAENDERT,
            IfNull(PGKBDP_RUEST.GEAEND_USR,    PGKBDP_STUECK.GEAEND_USR)    AS PGKBDP_GEAEND_USR,
            IfNull(PGKBDP_RUEST.HAS_RESANF,    PGKBDP_STUECK.HAS_RESANF)    AS PGKBDP_HAS_RESANF,
            IfNull(PGKBDP_RUEST.ID,            PGKBDP_STUECK.ID)            AS PGKBDP_ID,
            IfNull(PGKBDP_RUEST.KAP_PRIORI,    PGKBDP_STUECK.KAP_PRIORI)    AS PGKBDP_KAP_PRIORI,
            IfNull(PGKBDP_RUEST.KAP_SPERRE,    PGKBDP_STUECK.KAP_SPERRE)    AS PGKBDP_KAP_SPERRE,
            IfNull(PGKBDP_RUEST.K_IST_BEA,     PGKBDP_STUECK.K_IST_BEA)     AS PGKBDP_K_IST_BEA,
            IfNull(PGKBDP_RUEST.K_IST_DLZ,     PGKBDP_STUECK.K_IST_DLZ)     AS PGKBDP_K_IST_DLZ,
            IfNull(PGKBDP_RUEST.K_IST_R,       PGKBDP_STUECK.K_IST_R)       AS PGKBDP_K_IST_R,
            IfNull(PGKBDP_RUEST.K_IST_S,       PGKBDP_STUECK.K_IST_S)       AS PGKBDP_K_IST_S,
            IfNull(PGKBDP_RUEST.K_IST_WAR,     PGKBDP_STUECK.K_IST_WAR)     AS PGKBDP_K_IST_WAR,
            IfNull(PGKBDP_RUEST.K_REST_BEA,    PGKBDP_STUECK.K_REST_BEA)    AS PGKBDP_K_REST_BEA,
            IfNull(PGKBDP_RUEST.K_REST_DLZ,    PGKBDP_STUECK.K_REST_DLZ)    AS PGKBDP_K_REST_DLZ,
            IfNull(PGKBDP_RUEST.K_REST_R,      PGKBDP_STUECK.K_REST_R)      AS PGKBDP_K_REST_R,
            IfNull(PGKBDP_RUEST.K_REST_S,      PGKBDP_STUECK.K_REST_S)      AS PGKBDP_K_REST_S,
            IfNull(PGKBDP_RUEST.K_REST_WAR,    PGKBDP_STUECK.K_REST_WAR)    AS PGKBDP_K_REST_WAR,
            IfNull(PGKBDP_RUEST.K_SOLL_BEA,    PGKBDP_STUECK.K_SOLL_BEA)    AS PGKBDP_K_SOLL_BEA,
            IfNull(PGKBDP_RUEST.K_SOLL_DLZ,    PGKBDP_STUECK.K_SOLL_DLZ)    AS PGKBDP_K_SOLL_DLZ,
            IfNull(PGKBDP_RUEST.K_SOLL_R,      PGKBDP_STUECK.K_SOLL_R)      AS PGKBDP_K_SOLL_R,
            IfNull(PGKBDP_RUEST.K_SOLL_S,      PGKBDP_STUECK.K_SOLL_S)      AS PGKBDP_K_SOLL_S,
            IfNull(PGKBDP_RUEST.K_SOLL_WAR,    PGKBDP_STUECK.K_SOLL_WAR)    AS PGKBDP_K_SOLL_WAR,
            IfNull(PGKBDP_RUEST.PLATZ,         PGKBDP_STUECK.PLATZ)         AS PGKBDP_PLATZ,
            IfNull(PGKBDP_RUEST.POSNR,         PGKBDP_STUECK.POSNR)         AS PGKBDP_POSNR,
            IfNull(PGKBDP_RUEST.PP_DATUM,      PGKBDP_STUECK.PP_DATUM)      AS PGKBDP_PP_DATUM,
            IfNull(PGKBDP_RUEST.PP_JAHR,       PGKBDP_STUECK.PP_JAHR)       AS PGKBDP_PP_JAHR,
            IfNull(PGKBDP_RUEST.PP_KW,         PGKBDP_STUECK.PP_KW)         AS PGKBDP_PP_KW,
            IfNull(PGKBDP_RUEST.QUALI,         PGKBDP_STUECK.QUALI)         AS PGKBDP_QUALI,
            IfNull(PGKBDP_RUEST.RESTYP,        PGKBDP_STUECK.RESTYP)        AS PGKBDP_RESTYP,
            IfNull(PGKBDP_RUEST.SPLIT_KZ,      PGKBDP_STUECK.SPLIT_KZ)      AS PGKBDP_SPLIT_KZ,
            IfNull(PGKBDP_RUEST.STANDORT,      PGKBDP_STUECK.STANDORT)      AS PGKBDP_STANDORT,
            IfNull(PGKBDP_RUEST.START_FR,      PGKBDP_STUECK.START_FR)      AS PGKBDP_START_FR,
            IfNull(PGKBDP_RUEST.START_FR_R,    PGKBDP_STUECK.START_FR_R)    AS PGKBDP_START_FR_R,
            IfNull(PGKBDP_RUEST.START_FR_S,    PGKBDP_STUECK.START_FR_S)    AS PGKBDP_START_FR_S,
            IfNull(PGKBDP_RUEST.START_SP,      PGKBDP_STUECK.START_SP)      AS PGKBDP_START_SP,
            IfNull(PGKBDP_RUEST.START_SP_R,    PGKBDP_STUECK.START_SP_R)    AS PGKBDP_START_SP_R,
            IfNull(PGKBDP_RUEST.START_SP_S,    PGKBDP_STUECK.START_SP_S)    AS PGKBDP_START_SP_S,
            IfNull(PGKBDP_RUEST.STA_IST_R,     PGKBDP_STUECK.STA_IST_R)     AS PGKBDP_STA_IST_R,
            IfNull(PGKBDP_RUEST.STA_IST_S,     PGKBDP_STUECK.STA_IST_S)     AS PGKBDP_STA_IST_S,
            IfNull(PGKBDP_RUEST.TERM_RESID,    PGKBDP_STUECK.TERM_RESID)    AS PGKBDP_TERM_RESID,

            @ALL_DAB340_FIELDS@

         FROM "DAB340.ADT" DAB340

         LEFT JOIN "PGKBDP.ADT" PGKBDP_RUEST  ON (PGKBDP_RUEST.D240R_ID  = DAB340.DAB240_ID)
         LEFT JOIN "PGKBDP.ADT" PGKBDP_STUECK ON (PGKBDP_STUECK.D240S_ID = DAB340.DAB240_ID)

         WHERE
                DAB340.STANDORT = @STANDORT@
            AND DAB340.BUCH_TYP IN (200, 210)  // nur Rüst- und Stückzeit
            AND DAB340.DAB240_ID > 0

            AND DAB340.START >= @DATUM_ZEIT_VON@  // Ist-Buchung wird in die Woche des Buchungs-Starts einsortiert
            AND DAB340.START <  @DATUM_ZEIT_BIS@
       ) AS INNER_RESULT

       WHERE
          (   INNER_RESULT.PGKBDP_RUEST_ID  is not null
           OR INNER_RESULT.PGKBDP_STUECK_ID is not null)

           AND INNER_RESULT.PGKBDP_KAP_SPERRE = false // Macht das Sinn bei der Betrachtung von Ist-Werten?
           AND INNER_RESULT.PGKBDP_RESTYP     = '@RESTYP@' // angeklickter Balken im Chart


          @QUALI_AND_RES_FILTER@

       ORDER BY INNER_RESULT.START
