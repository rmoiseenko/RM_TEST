//##############################################################################
//##############################################################################
// Beschreibung:
//##############################################################################
//##############################################################################

|
   m_oOwnerForm:P1, m_cFormRefKey:P2, m_oMasterTable:P3, m_aParams:P4,
   
  // Kostanten
   m_cFormClassID, m_cWinPosSaveId, m_cBrowserID,
   m_aResult, m_bExportSuccessfull, m_cExportFilename,
   m_nTotal, m_nSequences, m_nTranslated, m_nTranslatedCharacters, m_nEscaped, m_nSkipped, m_cMessages,
   m_nNumberOfCharactersPerCent,
   
  // @VDB@ der nachfolgende Teil wird automatisch gepflegt
   oForm, A_HelpContent, a_openfile, A_Translate, Al_Actions, bar_MainBar,
   bar_MainDockControl, bar_Manager, beBarButton1, beBarButton2, beGroupPanel1,
   beGroupPanel2, beGroupPanel3, beGroupPanel4, beGroupPanel5, beGroupPanel6,
   BeInfoPanel_Ergebnis, BePanel1, cmb_TranslationLanguage, edt_AuthToken,
   edt_escaped, edt_euro, edt_exportfilename, edt_messages, edt_skipped,
   edt_total, edt_translated, edt_translatedCharacters, edt_TranslationFile,
   gpnl_Angaben, ipnl_Main, lbl_AuthToken, lbl_escaped, lbl_euro,
   lbl_exportfilename, lbl_fileoverwrite, lbl_HinweisAutoSprachauswahl,
   lbl_skipped, lbl_total, lbl_TranslateAlle, lbl_translated,
   lbl_translatedCharacters, lbl_TranslationFile, lbl_TranslationLanguage,
   pnl_Main, tgs_fileoverwrite, tgs_TranslateAlle
  // @VDE@ der vorangehende Teil wird automatisch gepflegt
|

//##############################################################################
//##############################################################################
// Konstanten
//##############################################################################
//##############################################################################

m_cFormClassID          := "@TRANSLAT",
m_cWinPosSaveId         := "@TRANSLAT",
m_cBrowserID            := "",
m_nNumberOfCharactersPerCent := 500,  // 500 Zeichen kosten 1 Cent => 20 Euro per 1.000.000 Zeichen

//##############################################################################
//##############################################################################
// Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// Enabled/Disbaled die Actions
// @Result: null
//******************************************************************************
function ActionsEnabled()
   if alen(m_aResult) = 0 then
      BeInfoPanel_Ergebnis.Caption   := "Übersetzung noch nicht gestartet",
      BeInfoPanel_Ergebnis.colormode := iif(m_bExportSuccessfull,ipcmok, ipcminfo),
   else,
      BeInfoPanel_Ergebnis.caption   := iif(m_bExportSuccessfull,"Übersetzung erfolgreich","Übersetzung nicht erfolgreich"),
      BeInfoPanel_Ergebnis.colormode := iif(m_bExportSuccessfull,ipcmok, ipcmerror),
   endif,
   edt_exportfilename.text           := m_cExportFilename,
   edt_total.text                    := m_nTotal,
   edt_translated.text               := m_nTranslated,
   edt_translatedCharacters.text     := m_nTranslatedCharacters,
   edt_escaped.text                  := m_nEscaped,
   edt_skipped.text                  := m_nSkipped,
   edt_messages.text                 := m_cMessages,
   edt_euro.text                     := upround(m_nTranslatedCharacters / m_nNumberOfCharactersPerCent / 100,2),
   a_Openfile.enabled                := m_bExportSuccessfull,
   A_Translate.enabled               := not empty(edt_translationFile.text),
end,

//******************************************************************************
// Ergebnis-Variablen setzen
// @Result: null
//******************************************************************************
function ParseParams()
   m_bExportSuccessfull     := KVU_GET(m_aResult,"EXPORTSUCCESSFULL",false),
   m_cExportFilename        := KVU_GET(m_aResult,"EXPORTFILENAME",''),
   m_nTotal                 := KVU_GET(m_aResult,"TOTAL",0),
   m_nSequences             := KVU_GET(m_aResult,"SEQUENCES",0),
   m_nTranslated            := KVU_GET(m_aResult,"TRANSLATED",0),
   m_nTranslatedCharacters  := KVU_GET(m_aResult,"TRANSLATED_CHARACTERS",0),
   m_nEscaped               := KVU_GET(m_aResult,"ESCAPED",0),
   m_nSkipped               := KVU_GET(m_aResult,"SKIPPED",0),
   m_cMessages              := KVU_GET(m_aResult,"MESSAGES",""),
   ActionsEnabled(),
end,

//******************************************************************************
// Parameter zurücksetzen
// @Result: null
//******************************************************************************
function ResetParams()
   m_aResult := {},
   ParseParams(),
end,


//******************************************************************************
// setzt funkstionsübergreifende Variabeln
// @Result: null
//******************************************************************************
function SetDefaults()
   lbl_HinweisAutoSprachauswahl.Visible := false,
   ActionsEnabled(),

   edt_AuthToken.Text := GetBeParam('DEEPL_TOK'),
end,

//******************************************************************************
// Eigenes Datenmodul erstellen, benötigte Tabellen öffnen und mit GUI verbinden
//******************************************************************************
function OpenDataBaseAndLinkToGUI()
   // Events zuweisen
   // - Wird hier per Code gemacht, damit man es beim Kopieren der Vorlage nicht
   //   per Designer vergisst.
   AssignEvent(oForm,            'OnClose',    'FormExClose'),
   AssignEvent(oForm,            'OnDestroy',  'FormExDestroy'),
end,


//##############################################################################
//##############################################################################
// Eventhandler
//##############################################################################
//##############################################################################


//******************************************************************************
// Änderung der Auswahl
//******************************************************************************
function tgs_TranslateAlleClick( Sender )
   Resetparams(),
end,

//******************************************************************************
// Änderung Sprachauswahl
//******************************************************************************
function cmb_TranslationLanguageChange( Sender )
   Resetparams(),
end,

//******************************************************************************
// Übersetzungsdatei ändern
//******************************************************************************
function edt_TranslationFileChange( Sender )
   | nLanguage |
   Resetparams(),

   lbl_HinweisAutoSprachauswahl.Visible := false,
   cmb_TranslationLanguage.Enabled := true,

   if File(edt_TranslationFile.Text) then
      nLanguage := val(StrToken(edt_TranslationFile.Text, '.', TokenCount(edt_TranslationFile.Text, '.') - 1)),
      
      if not empty(nLanguage) then
         nLanguage := LU_ISOLanguageCodeToBeLayoutLanguage(LU_BeGuiLanguageToISOLanguageCode(nLanguage)),
         cmb_TranslationLanguage.Value := nLanguage,
         cmb_TranslationLanguage.Enabled := false,
         lbl_HinweisAutoSprachauswahl.Visible := true,
      endif,
   endif,
end,

//******************************************************************************
// Klick auf Übersetzungsdatei
//******************************************************************************
function edt_TranslationFileBtnClick( Sender )
   | aDlg |
   Resetparams(),
   aDlg:= OpenDlg('Übesetzungsdatei auswählen', '(*.xlsx)|*.xlsx'),
   aDlg.Active := true,
   if aDlg.Selected then
      edt_TranslationFile.Text := aDlg.FileName,
   endif,
end,

//******************************************************************************
// Event: Beim Schließen des Formulars
//
// m_bForceclose wird genutzt, damit man bei der neuanlage beim A_CancelExecute
// das Fenster/Tab schliessen kann ohne im Supervisor-Modus sein zu müssen
//******************************************************************************
function FormExClose( Sender, Action )
   Action := caFree,
end,

//******************************************************************************
// Event: Beim Zerstören des Formulars
//******************************************************************************
function FormExDestroy( Sender )
   GFU_DockingForm_Destroyed(oForm, m_cFormRefKey),
end,

//##############################################################################
//##############################################################################
// Actionhandler
//##############################################################################
//##############################################################################


//******************************************************************************
// übersetzte Datei öffnen
//******************************************************************************
function a_openfileExecute( Sender )
   shellexecute(m_cExportFilename),
end,

//******************************************************************************
// Übersetzung durchführen
//******************************************************************************
function A_TranslateExecute( Sender )
   if not empty(edt_TranslationFile.Text) and cmb_TranslationLanguage.ItemIndex > 0  then
      BeInfoPanel_Ergebnis.Caption   := "Übersetzung läuft",
      BeInfoPanel_Ergebnis.colormode := ipcmwarning,
      if jn("Autotranslator für ausgewählte Datei starten? (Achtung für die Nutzung des Services fallen zusätzliche Gebühren an)") then
         setcursor(crhourglass),
         Startseq,
            m_aResult := call('.admin-tools\uebersetzungen\AutoTranslator\Webservice', edt_TranslationFile.Text, LU_BeLayoutLanguageToISOLanguageCode(cmb_TranslationLanguage.Value), tgs_TranslateAlle.Checked, tgs_FileOverwrite.checked, RTrim(edt_AuthToken.Text)),
            ParseParams(),
            SetBeParam('DEEPL_TOK', edt_AuthToken.Text),
         always
            setcursor(crdefault),
         stopseq,
      endif,
   else
      MessageDlg('Bitte geben Sie alle Daten an. Die Überstzungsprache darf ebenfalls nicht au Deutsch stehen.')
   endif,
end,


//##############################################################################
//##############################################################################
// Oberflächen-Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// InitForm lädt das Formular in Abhängigkeit des Owners
// @Result: null
//******************************************************************************
function InitForm()
   if empty(m_oOwnerForm) then
      oForm             := LoadForm(m_cFormClassID, Application),
      oForm.FormStyle   := fsNormal,
   else
      oForm             := LoadForm(m_cFormClassID, m_oOwnerForm),
      oForm.FormStyle   := fsNormal,
      oForm.BorderStyle := bsSizeToolWin, // notwendig für Dockbarkeit
   endif,
   
   oForm.PositionSaveID := m_cWinPosSaveId,
   oForm.Name           := GFU_CalcFormularName(m_cFormRefKey, oForm, m_oOwnerForm), // Eindeutiger Formular-Name für Docking-Logik
   oForm.Keypreview     := true,
   
   StyleForm(oForm),
end,

//******************************************************************************
// LoadGUI lädt sämtliche Komponenten die für die Oberfläche benötigt werden
// @Result: null
//******************************************************************************
function LoadGUI()
   // @VZB@ der nachfolgende Teil wird automatisch gepflegt
   A_HelpContent                := FindObject(oForm, "A_HelpContent"),
   a_openfile                   := FindObject(oForm, "a_openfile"),
   A_Translate                  := FindObject(oForm, "A_Translate"),
   Al_Actions                   := FindObject(oForm, "Al_Actions"),
   bar_MainBar                  := FindObject(oForm, "bar_MainBar"),
   bar_MainDockControl          := FindObject(oForm, "bar_MainDockControl"),
   bar_Manager                  := FindObject(oForm, "bar_Manager"),
   beBarButton1                 := FindObject(oForm, "beBarButton1"),
   beBarButton2                 := FindObject(oForm, "beBarButton2"),
   beGroupPanel1                := FindObject(oForm, "beGroupPanel1"),
   beGroupPanel2                := FindObject(oForm, "beGroupPanel2"),
   beGroupPanel3                := FindObject(oForm, "beGroupPanel3"),
   beGroupPanel4                := FindObject(oForm, "beGroupPanel4"),
   beGroupPanel5                := FindObject(oForm, "beGroupPanel5"),
   beGroupPanel6                := FindObject(oForm, "beGroupPanel6"),
   BeInfoPanel_Ergebnis         := FindObject(oForm, "BeInfoPanel_Ergebnis"),
   BePanel1                     := FindObject(oForm, "BePanel1"),
   cmb_TranslationLanguage      := FindObject(oForm, "cmb_TranslationLanguage"),
   edt_AuthToken                := FindObject(oForm, "edt_AuthToken"),
   edt_escaped                  := FindObject(oForm, "edt_escaped"),
   edt_euro                     := FindObject(oForm, "edt_euro"),
   edt_exportfilename           := FindObject(oForm, "edt_exportfilename"),
   edt_messages                 := FindObject(oForm, "edt_messages"),
   edt_skipped                  := FindObject(oForm, "edt_skipped"),
   edt_total                    := FindObject(oForm, "edt_total"),
   edt_translated               := FindObject(oForm, "edt_translated"),
   edt_translatedCharacters     := FindObject(oForm, "edt_translatedCharacters"),
   edt_TranslationFile          := FindObject(oForm, "edt_TranslationFile"),
   gpnl_Angaben                 := FindObject(oForm, "gpnl_Angaben"),
   ipnl_Main                    := FindObject(oForm, "ipnl_Main"),
   lbl_AuthToken                := FindObject(oForm, "lbl_AuthToken"),
   lbl_escaped                  := FindObject(oForm, "lbl_escaped"),
   lbl_euro                     := FindObject(oForm, "lbl_euro"),
   lbl_exportfilename           := FindObject(oForm, "lbl_exportfilename"),
   lbl_fileoverwrite            := FindObject(oForm, "lbl_fileoverwrite"),
   lbl_HinweisAutoSprachauswahl := FindObject(oForm, "lbl_HinweisAutoSprachauswahl"),
   lbl_skipped                  := FindObject(oForm, "lbl_skipped"),
   lbl_total                    := FindObject(oForm, "lbl_total"),
   lbl_TranslateAlle            := FindObject(oForm, "lbl_TranslateAlle"),
   lbl_translated               := FindObject(oForm, "lbl_translated"),
   lbl_translatedCharacters     := FindObject(oForm, "lbl_translatedCharacters"),
   lbl_TranslationFile          := FindObject(oForm, "lbl_TranslationFile"),
   lbl_TranslationLanguage      := FindObject(oForm, "lbl_TranslationLanguage"),
   pnl_Main                     := FindObject(oForm, "pnl_Main"),
   tgs_fileoverwrite            := FindObject(oForm, "tgs_fileoverwrite"),
   tgs_TranslateAlle            := FindObject(oForm, "tgs_TranslateAlle"),
   // @VZE@ der vorangehende Teil wird automatisch gepflegt
end,

//******************************************************************************
// ShowGUI zeigt das GUI an, das vorher mit LoadGUI geladen werden muss.
// @Result: null
//******************************************************************************
function ShowGUI()
   if empty(m_oOwnerForm) then
      ShowModal(oForm),
   else
      Show(oForm),
   endif,
end,

//##############################################################################
//##############################################################################
// Hauptprogramm
//##############################################################################
//##############################################################################

startseq
   InitForm(),
   LoadGUI(),
   SetDefaults(),
   OpenDataBaseAndLinkToGUI(),
   ShowGUI(),
onerror
   if not empty(oForm) then
      DestroyObject(oForm),
   endif,
   GU_SHOWSTDERRORMESSAGE(GetErrortext(), GetErrorobj()),
stopseq,

// Programm gibt die Formular-Instanz zurück => wichtig z.B. bei Aufruf per 'Call()'
oForm

