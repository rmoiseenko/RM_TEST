//##############################################################################
//##############################################################################
// Beschreibung: Mit Hilfe dieses Programms lassen sich Browser von einem
//               User auf andere User kopieren.
// @Result: null
//##############################################################################
//##############################################################################

|
   // DB
   m_oDM,

   // Oberflächenvariablen
   oForm,
   pnl_Headline,
   lbl_Browser,  edt_Browser,
   chk_Standard,
   lbl_VonUser,  cmb_VonUser,
   lbl_ZuUser,   cmb_ZuUser,
   chk_CheckSpr,
   btn_ok,       btn_Abbrechen
|

//##############################################################################
// Includes
//##############################################################################

//#p .admin-tools\browser-kopieren\utils

//##############################################################################

//******************************************************************************
// ValidateInput überprüft alle Eingaben.
// @Result: boolean - True = Eingaben sind valide.
//******************************************************************************
function ValidateInput()
  | cBrowser, oDabBRO |
   oDabBRO := BeOpen(waDABBRO, "BROWSER_ID"),
   startseq
      result := True,
      cBrowser := StrTran(edt_Browser.Text, ".BEB", ""),
      // Prüfen ob Browser eingetragen wurde.
      if Empty(cBrowser) then
         result := False,
         MessageDlg("Bitte ID des zu kopierenden Browsers eintragen."),
         exit,
      endif,
      // Prüfen ob VonUser eingetragen wurde.
      if cmb_VonUser.Enabled and empty(cmb_VonUser.Value) then
         result := False,
         MessageDlg("Bitte User eintragen, von dem der Browser kopiert werden soll."),
         exit,
      endif,
      // Prüfen ob der VonUser über den Browser verfügt.
      if !DBSeek({cBrowser, iif(cmb_VonUser.Enabled, cmb_VonUser.Value, 0)},
                 oDABBRO) then
          result := False,
          MessageDlg("Gewählter Browser bei diesem User nicht verfügbar."),
          exit,
      endif,
      // Prüfen ob ZuUser eingetragen wurden.
      if Empty(cmb_ZuUser.Value) then
         result := False,
         MessageDlg("Bitte User eintragen für die der Browser kopiert werden soll."),
         exit,
      endif,
   always
      BeClose(oDABBRO),
   stopseq,
end,

//******************************************************************************
// CopyBrowser kopiert nach überprüfung den angegebenen Browser vom angegebenen
// User auf alle ausgewählten User.
// @Result: null
//******************************************************************************
function CopyBrowser_local()
| cBrowser, cSource, cTargets |
   if not ValidateInput() then
      exit,
   endif,

   cBrowser := StrTran(edt_Browser.Text, ".BEB", ""),
   cTargets := cmb_ZuUser.Value,

   if chk_Standard.Checked then
      cSource := '0',
   else
      cSource := cmb_VonUser.Value,
   endif,

   BeStartTransaction(m_oDM),
   startseq
      CopyBrowser(m_oDM, cBrowser, cSource, cTargets, chk_CheckSpr.Checked, false),
      BeCommitTransaction(m_oDM),
   onerror
      BeGUITransactionAndErrorHandler(m_oDM, GetErrorText(), GetErrorObj()),
   stopseq,
end,

//******************************************************************************
// Enablen und Disablen der Von User Auswahl.
// @Result: null
//******************************************************************************
function DoOnStandardClick()
   if chk_Standard.Checked then
      lbl_VonUser.Enabled := False,
      cmb_VonUser.Enabled := False,
      cmb_zuUser.Value    := "/000/",
   else
      lbl_VonUser.Enabled := True,
      cmb_VonUser.Enabled := True,
   endif,
end,

//******************************************************************************
// AssignEvents fügt den Controls auf der Maske die Events hinzu.
// @Result: null
//******************************************************************************
function AssignEvents()
   AssignEvent(oForm,         'OnResize', 'DoOnFormResize'    ),
   AssignEvent(btn_ok,        'OnClick',  'DoOnOkClick'       ),
   AssignEvent(btn_Abbrechen, 'OnClick',  'DoOnAbbrechenClick'),
   AssignEvent(chk_Standard,  'OnClick',  'DoOnStandardClick' ),
end,

//##############################################################################
//##############################################################################
// Eventhandler
//##############################################################################
//##############################################################################

//******************************************************************************
// Beim verändern der Fenstergröße werden die Controlls neu ausgerichtet.
// @Result: null
//******************************************************************************
function DoOnFormResize()
   edt_Browser.Width := oForm.Width - edt_Browser.Left - 19,
   cmb_VonUser.Width := oForm.Width - edt_Browser.Left - 19,
   cmb_ZuUser.Width  := oForm.Width - edt_Browser.Left - 19,

   btn_ok.Left        := oForm.Width / 2 - 110,
   btn_Abbrechen.Left := oForm.Width / 2 - 5,
end,

//******************************************************************************
// Beim klicken auf Abbrechen wird das Fenster geschlossen.
// @Result: null
//******************************************************************************
function DoOnAbbrechenClick()
   CloseForm(oForm),
end,
//******************************************************************************
// Beim klicken auf OK wird der Browser kopiert.
// @Result: null
//******************************************************************************
function DoOnOkClick()
   CopyBrowser_local(),
end,

//##############################################################################
//##############################################################################
// Oberflächen-Funktionen
//##############################################################################
//##############################################################################

//******************************************************************************
// LoadGUI lädt sämtliche Komponenten die für die Oberfläche benötigt werden.
// @Result: null
//******************************************************************************
function LoadGUI()
   startseq
      // --- Formular ----------------------------------------------------------
      oForm            := CreateObject('TFormEx', ),
      oForm.OrigCapt   := 'Browser kopieren',
      oForm.Caption    := 'Browser kopieren',
      oForm.Width      := 290,
      oForm.Height     := 200,
      oForm.Font.Name  := 'Segue ui',
      oForm.Font.Size  := 8,
      oForm.Font.Style := fsBold,
      oForm.KeyPreview := True,
      oForm.Constraints.MaxHeight := 245,
      oForm.Constraints.MinHeight := 245,
      oForm.Constraints.MinWidth  := 500,
      oForm.PositionSaveId        := '@CPYBR',

      // --- Infopanel ---------------------------------------------------------
      pnl_Headline         := CreateObject('TBeInfoPanel', , oForm, oForm),
      pnl_Headline.Align   := alTop,
      pnl_Headline.Visible := True,
      pnl_Headline.Caption := 'Browser kopieren',

      // --- Browserauswahl ----------------------------------------------------
      // Label
      lbl_Browser            := CreateObject('TLabel', , oForm, oForm),
      lbl_Browser.Caption    := 'Zu kopierender Browser',
      lbl_Browser.Top        := 35,
      lbl_Browser.Left       :=  5,
      // Edit
      edt_Browser            := CreateObject('TBeEdit', , oForm, oForm),
      edt_Browser.Top        :=  32,
      edt_Browser.Left       := 150,
      edt_Browser.Font.Color := clMaroon,
      edt_Browser.MaxLength  := 10,
      edt_Browser.IsLoaded   := True,

      // --- Standardbrowser ---------------------------------------------------
      chk_Standard := CreateObject('TCheckBox', , oForm, oForm),
      chk_Standard.Caption := "Standardbrowser kopieren",
      chk_Standard.Width   := 170,
      chk_Standard.Top     := 60,
      chk_Standard.Left    := 150,
      chk_Standard.Enabled := True,

      // --- Von User ----------------------------------------------------------
      // Label
      lbl_VonUser               := CreateObject('TLabel', , oForm, oForm),
      lbl_VonUser.Caption       := 'Kopieren von User',
      lbl_VonUser.Top           := 85,
      lbl_VonUser.Left          :=  5,
      // UserCombo
      cmb_VonUser               := CreateObject('TBeAttribCombo', , oForm, oForm),
      cmb_VonUser.Top           :=  85,
      cmb_VonUser.Left          := 150,
      cmb_VonUser.BEAttributeId := -11,
      cmb_VonUser.Value         := c_usr, // Vorbelegen mit aktuellem User.

      // --- Kopieren zu User --------------------------------------------------
      // Label
      lbl_ZuUser               := CreateObject('TLabel', , oForm, oForm),
      lbl_ZuUser.Caption       := 'zu User',
      lbl_ZuUser.Top           := 120,
      lbl_ZuUser.Left          :=  5,
      // UserCombo
      cmb_ZuUser               := CreateObject('TBeAttribCheckCombo', , oForm, oForm),
      cmb_ZuUser.Top           :=  118,
      cmb_ZuUser.Left          := 150,
      cmb_ZuUser.BEAttributeId := -13,

      // --- Sprache kopieren -------------------------------------------------
      chk_CheckSpr         := CreateObject('TCheckBox', , oForm, oForm),
      chk_CheckSpr.Caption := "Übersetzungen auch kopieren",
      chk_CheckSpr.Width   := 250,
      chk_CheckSpr.Top     := 145,
      chk_CheckSpr.Left    := 150,
      chk_CheckSpr.Enabled := True,

      // --- Buttons -----------------------------------------------------------
      // OK-Button
      btn_ok       := CreateObject('TBeBitBtn', 'OK', oForm, oForm),
      btn_ok.Width := 100,
      btn_ok.Top   := 175,
      btn_ok.Left  := 45,
      btn_ok.ImageIndex.IndexNormal := 7,
      // Abbrechen-Button
      btn_Abbrechen       := CreateObject('TBeBitBtn', 'Abbrechen', oForm, oForm),
      btn_Abbrechen.Width := 100,
      btn_Abbrechen.Top   := 175,
      btn_Abbrechen.Left  := 150,
      btn_Abbrechen.ImageIndex.IndexNormal := 8,

     if IsLicense(liMultiLanguage) then
       chk_checkspr.checked := true,
       chk_checkspr.visible := true,
     else,
       chk_checkspr.checked := false,
       chk_checkspr.visible := false,
     endif,

   onerror
      DestroyObject(oForm),
      SetError('Error loading gui' + crlf + GetErrorText()),
   stopseq,
end,

//##############################################################################
//##############################################################################
// Hauptprogramm
//##############################################################################
//##############################################################################

startseq
   LoadGui(),
   m_oDM := BeCreateTransactionDM(oForm),
   AssignEvents(),
   ShowModal(oForm),
onerror
   GU_ShowStdErrorMessage('Fehler im Programm ' + ProgName(), GetErrorObj()),
stopseq,


