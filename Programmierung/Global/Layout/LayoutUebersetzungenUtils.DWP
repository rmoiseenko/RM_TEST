//##############################################################################
//##############################################################################
//
// Sammlung globaler Hilfs-Funktionen für die "Layout Übersetzungen"
//
//    Hinweise:
//    - Der Funktions-Präfix 'LUU' steht für 'L'ayout'U'ebersetzungen-'U'tils
//
//##############################################################################
//##############################################################################

| 
   gl_LUU_DesignModus:_L:=false,                     // diese Variable wird in der GUI gesetzt, sofern der "Design Modus" aktiviert wird
   gl_LUU_IndiOnlineHelp_SQLWhere:_C:='MEMO_ID = 6'  // Aufruf-Filter für die Individuelle Online-Hilfe aus der GUI heraus
|

//******************************************************************************
// Dient zur Prüfung
// wenn das Label kein Identifier ist sondern ein durchnummerierter Identifier
// @Result: null
//******************************************************************************
function _LUU_ExtractLabelIdentifier(cLabel)
| nAnzToken, cLastToken, bLastTokenHasOnlyNumbers, nLen, nLastTokenLen, cLabelCutLastTokenHasOnlyNumbers |
   Result                   := cLabel,
   nAnzToken                := TokenCount(cLabel, '_'),
   cLastToken               := AllTrim(StrToken(cLabel, '_', nAnzToken)),  // Wert hinter dem letzten Token
   bLastTokenHasOnlyNumbers := cLastToken == CharOnly('0123456789', cLastToken),
   // letzten Token abschneiden, und auch nur dann, wenn dieser nur aus Nummern besteht
   if bLastTokenHasOnlyNumbers then
      nLen                             := Len(cLabel),
      nLastTokenLen                    := Len(cLastToken) + 1,

      cLabelCutLastTokenHasOnlyNumbers := AllTrim(SubStr(cLabel, 1, nLen - nLastTokenLen)),
      Result                           := cLabelCutLastTokenHasOnlyNumbers,
   endif,
end,

//******************************************************************************
// INTERNE FUNKTION. NICHT DIREKT VERWENDEN!
// => Funktion ermittelt die Daten aus den Tabellen
// @Result: Übersetztes Label / Langtext bzw. im Designmodus der Labelname (String)
//******************************************************************************
function _LUU_Internal_GetValue(cLabel, cFeld, nSprache)
| i, cChar, bLastTokenHasOnlyNumbers, nLen, nLastTokenLen |
   Result := '',
   cLabel := AllTrim(Upper(cLabel)),
   cLabel := LUU_ExtractLabelIdentifier(cLabel),
   if gl_LUU_DesignModus then
      Result := cLabel,
   else,
      if nSprache <> 0 then // Daten aus der Übersetzungs-Detail-Tabelle holen
         Result := RTrim(LookUp(waKDNLBP, "LABEL", {{cLabel, nSprache}}, cFeld, "", lm_lookup)),
      endif,
      if Empty(Result) then // Daten für die "eigene Sprache" aus der Kopf-Tabelle holen
         Result := RTrim(LookUp(waKDNLBK, "LABEL", {{cLabel}},           cFeld, "", lm_lookup)),
      endif,
   endif,
end,

//******************************************************************************
// Fremdsprachenlabel für Formulare (Bezeichnung)
// @Result: Übersetztes Label / Langtext bzw. im Designmodus der Labelname (String)
//******************************************************************************
function _LUU_GetLabel(cLabel, nSprache)
   Result := LUU_Internal_GetValue(cLabel, 'BEZ', nSprache),
end,

//******************************************************************************
// Fremdsprachenlabel für Formulare (Memo)
// @Result: Übersetztes Label / Langtext bzw. im Designmodus der Labelname (String)
//******************************************************************************
function _LUU_GetMemo(cLabel, nSprache)
   Result := LUU_Internal_GetValue(cLabel, 'MEMO', nSprache),
end,
